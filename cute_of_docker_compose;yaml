# Service Python pour lire le topic Redpanda et envoyer des notifications Slack
  slack-notifier:
    build:
      context: ./slack-notifier
      dockerfile: Dockerfile
    container_name: sport-advantages-slack-notifier
    depends_on:
      - redpanda
    volumes:
      - ./slack-notifier:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - SLACK_WEBHOOK_URL=your_slack_webhook_url
    networks:
      - sport_network

  # Service Spark pour le traitement des donn√©es
  spark:
    image: docker.io/bitnami/spark:3.3
    container_name: sport-advantages-spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8090:8080"
      - "7077:7077"
    networks:
      - sport_network

  # Spark Worker
  spark-worker:
    image: docker.io/bitnami/spark:3.3
    container_name: sport-advantages-spark-worker
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - sport_network

  # Minio comme stockage compatible S3 pour Delta Lake
  minio:
    image: minio/minio
    container_name: sport-advantages-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - sport_network
